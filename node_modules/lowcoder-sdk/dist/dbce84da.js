import { _ as p, b as v, k as h, j as y } from "./8c706935.js";
import b, { useRef as f, useMemo as x, useState as N, useCallback as O } from "react";
var d = { exports: {} };
/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/
(function(e) {
  (function() {
    var s = {}.hasOwnProperty;
    function n() {
      for (var t = [], r = 0; r < arguments.length; r++) {
        var a = arguments[r];
        if (!!a) {
          var i = typeof a;
          if (i === "string" || i === "number")
            t.push(a);
          else if (Array.isArray(a)) {
            if (a.length) {
              var o = n.apply(null, a);
              o && t.push(o);
            }
          } else if (i === "object") {
            if (a.toString !== Object.prototype.toString && !a.toString.toString().includes("[native code]")) {
              t.push(a.toString());
              continue;
            }
            for (var c in a)
              s.call(a, c) && a[c] && t.push(c);
          }
        }
      }
      return t.join(" ");
    }
    e.exports ? (n.default = n, e.exports = n) : window.classNames = n;
  })();
})(d);
const m = d.exports;
function j(e, s) {
  const n = Object.assign({}, s.props);
  e.className && (n.className = m(s.props.className, e.className)), e.style && (n.style = Object.assign(Object.assign({}, n.style), e.style)), e.tabIndex !== void 0 && (n.tabIndex = e.tabIndex);
  for (const t in e)
    !e.hasOwnProperty(t) || (t.startsWith("data-") || t.startsWith("aria-")) && (n[t] = e[t]);
  return b.cloneElement(s, n);
}
var S = v, g = p, _ = h, w = g(function(e, s, n, t) {
  S(s, _(s), e, t);
}), P = w;
function V(...e) {
  function s(t, r) {
    return r === void 0 ? t : r;
  }
  let n = Object.assign({}, e[0]);
  for (let t = 1; t < e.length; t++)
    n = P(n, e[t], s);
  return n;
}
function W(e, s) {
  const n = e;
  for (const t in s)
    s.hasOwnProperty(t) && (n[t] = s[t]);
  return n;
}
const l = "adm-safe-area", A = (e) => j(e, /* @__PURE__ */ y("div", {
  className: m(l, `${l}-position-${e.position}`)
})), C = A, $ = (e) => typeof e == "function", E = process.env.NODE_ENV === "development" || process.env.NODE_ENV === "test", k = E;
function z(e) {
  k && ($(e) || console.error(`useMemoizedFn expected parameter is a function, got ${typeof e}`));
  const s = f(e);
  s.current = x(() => e, [e]);
  const n = f();
  return n.current || (n.current = function(...t) {
    return s.current.apply(this, t);
  }), n.current;
}
const D = () => {
  const [, e] = N({});
  return O(() => e({}), []);
}, F = D;
function M(e) {
  const {
    value: s,
    defaultValue: n,
    onChange: t
  } = e, r = F(), a = f(s !== void 0 ? s : n);
  s !== void 0 && (a.current = s);
  const i = z((o, c = !1) => {
    const u = typeof o == "function" ? o(a.current) : o;
    if (!(!c && u === a.current))
      return a.current = u, r(), t == null ? void 0 : t(u);
  });
  return [a.current, i];
}
export {
  C as S,
  W as a,
  $ as b,
  m as c,
  z as d,
  k as i,
  V as m,
  M as u,
  j as w
};
